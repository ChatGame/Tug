apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'signing'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 23
        versionCode 3
        versionName PROJ_VERSION
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

group = PROJ_GROUP
version = PROJ_VERSION
archivesBaseName = PROJ_ARTIFACTID

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

signing {
    sign configurations.archives
}

ext."signing.keyId" = properties.getProperty("gpg.keyid")
ext."signing.password" = properties.getProperty("gpg.pwd")
ext."signing.secretKeyRingFile" = properties.getProperty("gpg.ringfile")

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            def ossrhUsername = properties.getProperty('oss.user');
            def ossrhPassword = properties.getProperty('oss.pwd');

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name PROJ_NAME
                packaging 'aar'
                // optionally artifactId can be defined here
                description PROJ_DESCRIPTION
                url PROJ_WEBSITEURL

                scm {
                    connection PROJ_VCSURL
                    developerConnection PROJ_VCSURL
                    url PROJ_WEBSITEURL
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'starkingwx'
                        name 'starkingwx'
                        email 'xingwang@v5.cn'
                    }
                }
            }
        }
    }
}
